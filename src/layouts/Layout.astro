---
import Navbar from '../components/Navbar.astro';
import 'photoswipe/style.css';
import 'photoswipe-dynamic-caption-plugin/photoswipe-dynamic-caption-plugin.css';

export interface Props {
	title?: string;
	description?: string;
	root?: boolean;
}

const {root} = Astro.props;

const BASE_TITLE = 'るちかどっとねっと。';

const title = Astro.props.title ? `${Astro.props.title} | ${BASE_TITLE}` : BASE_TITLE;
const description = Astro.props.description ?? '海老瀬るちか。いろいろな創作とゲームが好きです。';
const themeColor = '#651622';
---

<!DOCTYPE html>
<html lang="ja" data-theme="dark">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.png" />
		<meta name="generator" content={Astro.generator} />
		<link href="https://koruri.chillout.chat/koruri.css" rel="stylesheet">
		<link href="https://unpkg.com/sanitize.css" rel="stylesheet"/>
		<title>{title}</title>
		<meta name="description" content={description} />
		<meta name="msapplication-TileColor" content={themeColor} />
		<meta name="theme-color" content={themeColor} />
		<meta property="og:type" content={title ? 'article' : 'website'} />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:site_name" content={BASE_TITLE} />
		<meta property="og:image" content="/favicon.png" />
	</head>
	<body id="root">
		{!root && <Navbar />}
		<main class={!root ? 'non-root' : ''}>
			<slot />
		</main>
		<footer>
			<span>(C)2023-{new Date().getFullYear()} Ebise Lutica all rights reserved.</span>
		</footer>
	</body>
</html>

<script>
	import PhotoSwipe from 'photoswipe';
	import PhotoSwipeLightbox from 'photoswipe/lightbox';
	import PhotoSwipeDynamicCaption from 'photoswipe-dynamic-caption-plugin';

	const lightbox = new PhotoSwipeLightbox({
	gallery: '#root',
	children: '.item',
	pswpModule: PhotoSwipe,
	});

	const captionPlugin = new PhotoSwipeDynamicCaption(lightbox, {
	type: 'auto',
	});

	const theme = window.matchMedia('(prefers-color-scheme: dark)');

	theme.addEventListener('change', () => {
		document.documentElement.dataset.theme = theme.matches ? 'dark' : 'light';
	});
	document.documentElement.dataset.theme = theme.matches ? 'dark' : 'light';

	lightbox.init();
</script>

<style lang="scss">
	main.non-root {
		margin-top: 32px;
	}

	main {
		min-height: calc(100vh - 384px);
		padding-bottom: 96px;
	}

	footer {
		text-align: center;
		padding: 128px 0;
		background-image: url('/bg-darker.jpg');
		background-size: cover;
		background-attachment: fixed;
		font-weight: bold;
		color: white;
		box-shadow: 0 0 64px 48px rgba(0, 0, 0, 0.6) inset;
		> span {
			opacity: 0.6;
		}
	}
</style>

<style lang="scss" is:global>
html {
	--foreground: #211520;
	--background: #fff1f2;
	--primary: #B93E43;
	--primaryDark: #9c2d3e;
	--link: #a531ec;
	--dimmed: #8995A8;
	--warn: #ecbd15;
	--success: #6f8e4d;
	--danger: #f44336;
	
	&[data-theme="dark"] {
		/* NOTE: http://colormind.io/bootstrap/ で作った */
		--foreground: #F4F7F3;
		--background: #211520;
		--primary: #B93E43;
		--primaryDark: #651622;
		--link: #b46fde;
		--dimmed: #8995A8;
		--warn: #ecbd15;
		--success: #6f8e4d;
		--danger: #f44336;
	}
	
	background-color: var(--background);
	color: var(--foreground);
	font-family: "Koruri", sans-serif;
	font-size: 16px;
	line-height: 2;
}

::selection {
	background-color: var(--primary);
}

.hstack {
	display: flex;
	gap: 8px;
}

p {
	margin-bottom: 10px;

	+ p {	
		margin-top: 0;
	}
}

h1 {
	margin: 0;
}

h2 {
	margin-top: 64px;
	margin-bottom: 0;
	border-bottom: 2px solid var(--primary);
}

h3 {
	margin-top: 48px;
	margin-bottom: 0;
	border-left: 2px solid var(--primary);
	padding-left: 8px;
}

img {
	width: 100%;
}

a {
color: var(--link);
}

blockquote {
	color: var(--dimmed);
	margin-left: 0;
	border-left: 2px solid var(--dimmed);
	padding-left: 16px;
}

.button {
	padding: 4px 16px;
	line-height: 1.5;
	font-weight: bold;
	color: var(--foreground);
	border: 2px solid var(--foreground);
	cursor: pointer;
	text-decoration: none;
	border-radius: 12px;

	&.disabled, &:disabled {
		opacity: 0.5;
	}

	&.primary {
		border-color: var(--primary);
		background: 2px var(--primary);
	}

	&:hover {
		filter: brightness(1.1);
	}

	&:active {
		filter: brightness(0.7);
	}
}

.fluid {
	width: 100%;
}

iframe {
	width: 100%;
}

figure {
	margin: 1rem 0;
	width: 100%;
	max-width: fit-content;
	border: 2px dashed var(--primaryDark);
	padding: 16px 24px;

	img {
		width: 100%;
	}

	.item img {
		cursor: zoom-in;
	}

	figcaption {
		color: var(--dimmed);
		&::before {
			content: '▲ ';
			font-size: 0.7em;
		}
	}
}
</style>
